# Bind to a fixed address and port, IPv4 and IPv6 at Port 1234
bind any:10000;
# bind [EXTERNE-IPv6]:1234 interface "eth0";

# Set the user, fastd will work as
user "ffsh";

# Set the interface name
interface "ffsh-mesh";

# Status socket
status socket "/run/fastd/fastd-ffsh.socket";
# Set the mode, the interface will work as
mode tap;

# Set the mtu of the interface (salsa2012 with ipv6 will need 1406)
mtu 1426;

# Set the methods (aes128-gcm preferred, salsa2012+umac preferred for nodes)
method "null@l2tp";
method "null";
method "salsa2012+umac";

#hide ip addresses yes;
#hide mac addresses yes:

# Secret key generated by `fastd --generate-key`
secret "{{ fastd_secret }}";

# Log everything to syslog
log to syslog level debug;

# Include peers from our git-repos
#include peers from "peers/"; #optional eigene peers anlegen zb den eigenen toaster mit fastd oder so
include peers from "gateways/"; #git repo klonen in /etc/fastd/ffsh/ git clone  https://github.com/ffsh/gateways.git

# Configure a shell command that is run on connection attempts by unknown peers (true means, all attempts are accepted)
on verify "true";
# on verify "/etc/fastd/fastd-blacklist.sh $PEER_KEY";

# Configure a shell command that is run when fastd comes up
on up "
 ip link set dev $INTERFACE address {{  ffsh_fastd_mac }}
 ip link set dev $INTERFACE up
 
 batctl meshif bat0 if add $INTERFACE
 ip link add dev bat0 type batadv
 ip addr add {{ ffsh_ipv4_address}}/16 dev bat0
 ip addr add {{ ffsh_ipv6_address}}/64 dev bat0
 ip link set address {{ ffsh_map_mac }} dev bat0
 batctl meshif bat0 orig_interval 10000
 batctl meshif bat0 gw_mode server 100mbit/100mbit
 ip rule add from all fwmark 0x1 table 42
 
 ip link set dev bat0 up
 sh /etc/fastd/ffsh/iptables_ffsh.sh
";

on down "
 ip link set dev $INTERFACE down
";
